// Client-side spreadsheet UI

document.addEventListener("DOMContentLoaded", function() {
    const spreadsheetContainer = document.getElementById("spreadsheet");
    const formulaInput = document.getElementById("formula-input");
    const statusMessage = document.getElementById("status-message");

    let selectedCell = null;

    function createSpreadsheet(rows, cols) {
        spreadsheetContainer.innerHTML = ""; // Clear existing content
        const table = document.createElement("table");

        for (let r = 1; r <= rows; r++) {
            const row = document.createElement("tr");
            for (let c = 1; c <= cols; c++) {
                const cell = document.createElement("td");
                cell.contentEditable = true;
                cell.dataset.cellName = `${String.fromCharCode(64 + c)}${r}`; // A1, B1, etc.
                cell.addEventListener("click", function() {
                    selectCell(cell);
                });
                row.appendChild(cell);
            }
            table.appendChild(row);
        }
        spreadsheetContainer.appendChild(table);
    }

    function selectCell(cell) {
        if (selectedCell) {
            selectedCell.classList.remove("selected");
        }
        selectedCell = cell;
        selectedCell.classList.add("selected");
        formulaInput.value = selectedCell.innerText; // Load cell value into formula input
    }

    formulaInput.addEventListener("keydown", function(event) {
        if (event.key === "Enter" && selectedCell) {
            event.preventDefault();
            const formula = formulaInput.value;
            selectedCell.innerText = formula; // Set cell value
            // Here you would also send the formula to the server for processing
            statusMessage.innerText = "Formula applied: " + formula;
            formulaInput.value = ""; // Clear input after applying
        }
    });

    // Example: Create a 10x10 spreadsheet on load
    createSpreadsheet(10, 10);
});