.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spreadsheet Application</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f5f5f5;
        }
        
        .container {
            text-align: center;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 40px;
            width: 80%;
            max-width: 600px;
        }
        
        h1 {
            color: #333;
            margin-bottom: 30px;
        }
        
        .options {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        
        .option-btn {
            padding: 15px 20px;
            font-size: 18px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .create-new {
            background-color: #4CAF50;
            color: white;
        }
        
        .create-new:hover {
            background-color: #45a049;
        }
        
        .load-existing {
            background-color: #2196F3;
            color: white;
        }
        
        .load-existing:hover {
            background-color: #0b7dda;
        }
        
        .file-input {
            display: none;
        }
        
        .status {
            margin-top: 20px;
            color: #666;
            min-height: 20px;
        }
        
        .dimensions-form {
            display: none;
            margin-top: 20px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        .dimensions-form input {
            padding: 8px;
            margin: 5px;
            width: 80px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        
        .dimensions-form button {
            padding: 8px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Spreadsheet Application</h1>
        
        <div class="options">
            <button id="createNewBtn" class="option-btn create-new">Create New Spreadsheet</button>
            <button id="loadExistingBtn" class="option-btn load-existing">Load Existing Spreadsheet</button>
            <input type="file" id="fileInput" class="file-input" accept=".bin.gz">
        </div>
        
        <div id="dimensionsForm" class="dimensions-form">
            <h3>Enter spreadsheet dimensions:</h3>
            <div>
                <input type="number" id="rowsInput" min="1" max="100" value="10" placeholder="Rows">
                <input type="number" id="colsInput" min="1" max="26" value="10" placeholder="Columns">
            </div>
            <button id="createBtn">Create</button>
        </div>
        
        <div id="status" class="status"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const createNewBtn = document.getElementById('createNewBtn');
            const loadExistingBtn = document.getElementById('loadExistingBtn');
            const fileInput = document.getElementById('fileInput');
            const statusDiv = document.getElementById('status');
            const dimensionsForm = document.getElementById('dimensionsForm');
            const rowsInput = document.getElementById('rowsInput');
            const colsInput = document.getElementById('colsInput');
            const createBtn = document.getElementById('createBtn');
            
            // Create new spreadsheet button
            createNewBtn.addEventListener('click', function() {
                dimensionsForm.style.display = 'block';
                statusDiv.textContent = '';
            });
            
            // Create button inside dimensions form
            createBtn.addEventListener('click', function() {
                const rows = parseInt(rowsInput.value, 10);
                const cols = parseInt(colsInput.value, 10);
                
                if (isNaN(rows) || rows < 1 || rows > 100 || isNaN(cols) || cols < 1 || cols > 26) {
                    statusDiv.textContent = 'Please enter valid dimensions (rows: 1-100, columns: 1-26)';
                    return;
                }
                
                // Navigate to the sheet page with dimensions
                window.location.href = `/sheet?rows=${rows}&cols=${cols}`;
            });
            
            // Load existing spreadsheet button
            loadExistingBtn.addEventListener('click', function() {
                fileInput.click();
            });
            
            // Handle file selection
            fileInput.addEventListener('change', function() {
                if (fileInput.files.length === 0) {
                    return;
                }
                
                const file = fileInput.files[0];
                if (!file.name.endsWith('.bin.gz')) {
                    statusDiv.textContent = 'Please select a valid spreadsheet file (.bin.gz)';
                    return;
                }
                
                statusDiv.textContent = 'Uploading file...';
                
                const formData = new FormData();
                formData.append('spreadsheet', file);
                
                fetch('/api/load', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => {
                            throw new Error(data.message || 'Failed to load spreadsheet');
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.status === 'ok') {
                        statusDiv.textContent = 'Spreadsheet loaded successfully. Redirecting...';
                        // Redirect to the sheet page
                        setTimeout(() => {
                            window.location.href = '/sheet';
                        }, 1000);
                    } else {
                        throw new Error(data.message || 'Unknown error');
                    }
                })
                .catch(error => {
                    statusDiv.textContent = 'Error: ' + error.message;
                    console.error('Error loading spreadsheet:', error);
                });
            });
        });
    </script>
</body>
</html>